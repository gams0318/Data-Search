import React from 'react'
import { data } from './data'
import { Container, FormControlLabel, Typography, FormControl, InputLabel, Select, MenuItem, Checkbox, Button, Paper } from '@mui/material';
import { useState } from 'react';
import Card from '@mui/material/Card';
import CardContent from '@mui/material/CardContent';
import NavigateBeforeIcon from '@mui/icons-material/NavigateBefore';
import NavigateNextIcon from '@mui/icons-material/NavigateNext';
import './App.css'

function App() {
  const [httpMethod, setHttpMethod] = useState("any");
  const [awsRegion, setAwsRegion] = useState("any");
  const [status, setStatus] = useState(true);
  const [responseTime, setResponseTime] = useState(true);
  const [ipAddress, setIpAddress] = useState(true);
  const [results, setResults] = useState(data);
  const [activeCard, setActiveCard] = useState(0);

  const handleSearch = () => {
    const filteredData = data.filter((result) => {
      return (
        (result["aws_region"].toLowerCase() === awsRegion || awsRegion === 'any') &&
        (result["http_method"].toLowerCase() === httpMethod || httpMethod === 'any')
      );
    });
    setResults(filteredData);
    setActiveCard(0);
  };
  return (
    <div>
      <Container maxWidth="sm" sx={{ mt: 3 }}>
        <Paper elevation={3} style={{ padding: '20px', }}>
          <Typography variant="h4" gutterBottom style={{ textAlign: "center" }}>
            Data Finder
          </Typography>

          <FormControl fullWidth variant="outlined" required={true} sx={{ mb: 2 }}>
            <InputLabel>HTTP Request</InputLabel>
            <Select
              value={httpMethod}
              onChange={(e) => setHttpMethod(e.target.value)}
              label="http_method"
            >
              <MenuItem value="any">
                <em>Any</em>
              </MenuItem>
              <MenuItem value="get">GET</MenuItem>
              <MenuItem value="put">PUT</MenuItem>
              <MenuItem value="post">POST</MenuItem>
              <MenuItem value="delete">DELETE</MenuItem>
              <MenuItem value="update">UPDATE</MenuItem>
            </Select>
          </FormControl>
          <FormControl required={true} fullWidth variant="outlined" sx={{ mb: 2 }}>
            <InputLabel>AWS Region</InputLabel>
            <Select
              value={awsRegion}
              onChange={(e) => setAwsRegion(e.target.value)}
              label="aws_region"
            >
              <MenuItem value="any">
                <em>Any</em>
              </MenuItem>
              <MenuItem value="us-west-2">us-west-2</MenuItem>
              <MenuItem value="us-east-1">us-east-1</MenuItem>
              <MenuItem value="eu-west-1">eu-west-1</MenuItem>
            </Select>
          </FormControl>

          <Button
            variant="contained"
            color="primary"
            onClick={handleSearch}
            fullWidth
            sx={{ mb: 2 }}
          >
            Search
          </Button>
          <Typography variant="h7" gutterBottom style={{ display: 'block' }}>
            Please check the details you wish to avail
          </Typography>
          <div style={{ display: "flex" }}>
            <FormControlLabel
              control={
                <Checkbox
                  checked={status}
                  onChange={(e) => setStatus(e.target.checked)}
                />
              }
              label="Status Code"
              sx={{ mb: 2 }}
            />
            <FormControlLabel
              control={
                <Checkbox
                  checked={ipAddress}
                  onChange={(e) => setIpAddress(e.target.checked)}
                />
              }
              label="IP Address"
              sx={{ mb: 2 }}
            />
            <FormControlLabel
              control={
                <Checkbox
                  checked={responseTime}
                  onChange={(e) => setResponseTime(e.target.checked)}
                />
              }
              label="Response time"
              sx={{ mb: 2 }}
            />
          </div>
        </Paper>


      </Container>
      {results.length === 0 ?
        <Typography variant="h6" gutterBottom style={{ textAlign: "center", my: 2 }}>
          No data found
        </Typography>
        :
<<<<<<< HEAD
        results.map((result, idx) => (
          activeCard === idx ? <div style={{ margin: "0 auto", textAlign: "center" }}>
            <Typography sx={{ fontSize: 24, mx: "auto", textAlign: "center", marginTop: 5, marginBottom: 3 }} gutterBottom>
              Showing {idx + 1} of {results.length} results
            </Typography>
            <div style={{ display: "flex", margin: " auto", justifyContent: "center", alignItems: "center", textAlign: "center" }} className='cards-holder'>
              <Button variant="contained" color="primary" onClick={() => setActiveCard(idx === 0 ? results.length - 1 : idx - 1)} sx={{ height: "2.5rem" }}>
                <NavigateBeforeIcon /></Button>
              <Card className='indi-card' sx={{ backgroundColor: "whitesmoke", textAlign: "center", borderRadius: "25px", boxShadow: "1px 2px 2px 2px grey", flexGrow: 1 }} key={idx}>
                <CardContent>
=======
        // <div style={{ width: 500, margin: "1rem auto", textAlign: "center", boxShadow: "1px 2px 2px grey" }}>
        <Carousel
          autoPlay={false}
          animation="slide"
          navButtonsAlwaysVisible={true}
          navButtonsProps={{
            style: {
              backgroundColor: '#1976d2',
              color: 'white',
              borderRadius: 3,
              width: 30,
              marginTop: -15,
              fontSize: 30
             
            }
          }
          }
          indicators={false}
          //height={"fit-content"}
          sx={{ overflow:"auto",minWidth: 275, maxWidth: 500, mx: "auto", textAlign: "center", marginTop: 5 }}
        >{results.map((result, idx) => (
          <Card sx={{ p: 1, height: "fit-content", backgroundColor: "#dedede", borderRadius: "25px", boxShadow: "1px 2px 2px 2px grey" }} key={idx}>
            <CardContent>
>>>>>>> 4a51d2d5fc0c534605d52ec6fe826a332909571d

                  <Typography sx={{ fontSize: 14 }} gutterBottom>
                    Method: {result['http_method']} Request
                  </Typography>

                  <Typography variant="h5" component="div" className='region-name'>
                    AWS Region: {result['aws_region']}
                  </Typography>

                  {status ?
                    <Typography sx={{ mb: 1.5 }} color="text.secondary">
                      Status code: {result['http_status_code']}
                    </Typography> : null}

                  {ipAddress ?
                    <Typography variant="body2">
                      IP Address: {result['ip_address']}
                    </Typography> : null}

                  {responseTime ?
                    <Typography variant="body2">
                      Response Time: {result['response_time']} ms
                    </Typography> : null}

                </CardContent>
              </Card>
              <Button
                variant="contained" color="primary" onClick={() => setActiveCard(idx === results.length - 1 ? 0 : idx + 1)} sx={{ height: "2.5rem" }}>
                <NavigateNextIcon />
              </Button>
            </div>
          </div> : null
        ))
      }
    </div >
  )
}

export default App;
